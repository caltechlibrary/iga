# =============================================================================
# @file    action.yml
# @brief   GitHub Action definition file for the InvenioRDM GitHub Archiver
# @author  Michael Hucka <mhucka@caltech.edu>
# @license Please see the file named LICENSE in the repository
# @repo    https://github.com/caltechlibrary/iga
# =============================================================================

name: "IGA"
description: "Automatically archive GitHub releases in an InvenioRDM repository"
author: "Michael Hucka -- https://github.com/mhucka"
branding:
  icon: upload-cloud
  color: orange

inputs:
  INVENIO_SERVER:
    description: "Address of destination InvenioRDM server."
    required: true
    type: string
  INVENIO_TOKEN:
    description: "Personal Access Token for InvenioRDM server."
    required: true
    type: string
  all_assets:
    description: "Attach all GitHub assets, not just the source ZIP."
    default: false
    required: false
    type: boolean
  all_metadata:
    description: "Include additional metadata from GitHub."
    default: false
    required: false
    type: boolean
  community:
    description: "Submit record to the designated RDM community."
    default: 'none'
    required: false
    type: string
  draft:
    description: "Mark the InvenioRDM record as a draft."
    default: false
    required: false
    type: boolean
  parent_record:
    description: "The record ID of a parent record (to make a new version)."
    default: 'none'
    required: false
    type: string
  release_tag:
    description: "The tag of the release to archive."
    default: 'latest'
    required: false
    type: string
  debug:
    # Note that IGA has more modes than only debug on/off, but for
    # simplicity, this action workflow only offers a binary toggle.
    # Turning on debug also prints additional info in the workflow.
    description: "Print debugging info in the GitHub Action output."
    default: false
    required: false
    type: boolean

runs:
  using: composite
  steps:
    - name: Perform some sanity checks and report errors.
      shell: bash
      run: |
        echo "error=" >> "$GITHUB_ENV"
        if [ "${{inputs.INVENIO_SERVER}}" == 'https://data.caltechlibrary.dev' ]; then
          echo "::error title=Configuration error::Variable INVENIO_SERVER is not set."
          echo "error=no_server" >> "$GITHUB_ENV"
        fi
        if [ "${{inputs.INVENIO_TOKEN}}" == '' ]; then
          echo "::error title=Configuration error::Secret INVENIO_TOKEN is not set."
          echo "error=no_token >> "$GITHUB_ENV"
        fi

    - name: Abort rest of workflow if errors found.
      uses: actions/github-script@v6
      if: ${{env.error}} != ''
      with:
        script: |
          core.setFailed('Workflow stopped due to an error.')

    - name: Install IGA.
      shell: bash
      run: |
        python -m pip install iga

    - name: Configure IGA run-time options.
      shell: bash
      run: |
        echo "draft=" >> "$GITHUB_ENV"
        echo "all_assets=" >> "$GITHUB_ENV"
        echo "all_metadata=" >> "$GITHUB_ENV"
        echo "use_community=" >> "$GITHUB_ENV"
        echo "community=" >> "$GITHUB_ENV"
        echo "use_parent=" >> "$GITHUB_ENV"
        echo "parent=" >> "$GITHUB_ENV"
        echo "tag=" >> "$GITHUB_ENV"
        echo "mode=normal" >> "$GITHUB_ENV"
        if [ "${{inputs.release_tag || 'latest'}}" == 'latest' ]; then
          echo "tag=${{github.ref_name}}" >> "$GITHUB_ENV"
        else
          echo "tag=${{inputs.release_tag}}" >> "$GITHUB_ENV"
        fi
        if [ "${{inputs.draft || 'false'}}" != 'false' ]; then
          echo 'draft=--draft' >> "$GITHUB_ENV"
        fi
        if [ "${{inputs.all_assets || 'false'}}" != 'false' ]; then
          echo 'all_assets=--all-assets' >> "$GITHUB_ENV"
        fi
        if [ "${{inputs.all_metadata || 'false'}}" != 'false' ]; then
          echo 'all_metadata=--all-metadata' >> "$GITHUB_ENV"
        fi
        if [ "${{inputs.community || 'none'}}" != 'none' ]; then
          echo 'use_community=--community' >> "$GITHUB_ENV"
          echo "community=${{inputs.community}}" >> "$GITHUB_ENV"
        fi
        if [ "${{inputs.parent_record || 'none'}}" != 'none' ]; then
          echo 'use_parent=--parent-record' >> "$GITHUB_ENV"
          echo "parent=${{inputs.parent_record}}" >> "$GITHUB_ENV"
        fi
        if [ "${{inputs.debug || 'false'}}" != 'false' ]; then
          echo "mode=debug" >> "$GITHUB_ENV"
        fi

    - name: Dump GitHub Actions context and variables if debugging is on.
      if: inputs.debug == true || inputs.debug == 'true'
      env:
        # Setting this variable and then printing it below is not strictly
        # necessary; you could put the expression directly into the echo
        # command below. But when I do that, I get a doubling of the output.
        GITHUB_CONTEXT: ${{toJSON(github)}}
      shell: bash
      run: |
        echo "repository_owner = ${{github.repository_owner}}"
        echo "repository = ${{github.event.repository.name}}"
        echo "release tag = ${{github.ref_name}}"
        echo "====================="
        echo "$GITHUB_CONTEXT"

    - name: Run IGA.
      env:
        RELEASE_TAG: ${{inputs.release_tag}}
        INVENIO_SERVER: ${{inputs.INVENIO_SERVER}}
        INVENIO_TOKEN: ${{inputs.INVENIO_TOKEN}}
        GITHUB_TOKEN: ${{github.token}}
      shell: bash
      run: |
        echo "record_url=$(iga --log-dest iga.out --mode ${{env.mode}} --github-account ${{github.repository_owner}} --github-repo ${{github.event.repository.name}} ${{env.draft}} ${{env.all_assets}} ${{env.all_metadata}} ${{env.use_community}} ${{env.community}} ${{env.use_parent}} ${{env.parent}} ${{env.tag}})" >> $GITHUB_ENV

    - name: Summarize the results.
      shell: bash
      run: |
        echo \#\# Successfully archived release ${{github.ref_name}} >> $GITHUB_STEP_SUMMARY
        echo URL of the new InvenioRDM record: ${{env.record_url}}   >> $GITHUB_STEP_SUMMARY
